#we apply the same using kubectl apply -f deploy.yaml
apiVersion: apps/v1 #it will start taking to the kubernets api called as apps/v1
kind: Deployment #it will invoke deployment api
metadata:
  name: frontend #once it invoke the deployment api it has to do something(it will create a deployment with the name)
  labels: #what is this label is all about
    app: guestbook #all the pod it is going to launch will label with this 
spec:
  #it will create three different pod
  selector:
    matchLabels: #going to be mapped using match value
      app: guestbook
      tier: frontend
  replicas: 3    

  template: #this is also called as deployment template what will my deploymetn will do
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: php-redis 
        image: gcr.io/google_samples/gb-frontend:v4
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: GET_HOST_FROM
          value: dns 
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  type: LoadBalancer
  ports:
  - port: 80   
  selector:
    app: guestbook
    tier: frontend
